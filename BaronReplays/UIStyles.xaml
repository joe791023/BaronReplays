<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
                    xmlns:local="clr-namespace:BaronReplays">
    <SolidColorBrush Color="White" x:Key="ButtonForegroundColor"/>
    <SolidColorBrush Color="#FF333333" x:Key="ButtonBackgroundColor"/>
    <SolidColorBrush Color="White" x:Key="ButtonBorderColor"/>
    <SolidColorBrush Color="#FF1A75BB" x:Key="ButtonSelectedColor"/>
    <SolidColorBrush Color="#FF333333" x:Key="ButtonMouseOverColor"/>
    <SolidColorBrush Color="#FF171717" x:Key="ButtonPressedColor"/>

    <Style x:Key="TriButtonStyle" TargetType="Button">
        <Setter Property="Foreground" Value="{StaticResource ButtonForegroundColor}"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="Button">
                    <Border Name="Edge" BorderThickness="0" CornerRadius="3" Padding="{TemplateBinding Padding}" Background="{StaticResource ButtonBackgroundColor}" BorderBrush="White">
                        <ContentPresenter HorizontalAlignment="Center" VerticalAlignment="Center" Content="{TemplateBinding Content}" />
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter TargetName="Edge"  Property="Background" Value="{StaticResource ButtonMouseOverColor}" />
                            <Setter TargetName="Edge"  Property="BorderThickness" Value="1" />
                        </Trigger>
                        <Trigger Property="IsPressed" Value="True">
                            <Setter TargetName="Edge"  Property="Background" Value="{StaticResource ButtonPressedColor}" />
                        </Trigger>
                        <Trigger Property="IsEnabled" Value="False">
                            <Setter TargetName="Edge"  Property="Background" Value="{StaticResource ButtonPressedColor}" />
                            <Setter TargetName="Edge"  Property="BorderThickness" Value="1" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="TriBRButtonStyle" TargetType="{x:Type local:BRButton}">
        <Setter Property="Foreground" Value="{StaticResource ButtonForegroundColor}"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate  TargetType="{x:Type local:BRButton}">
                    <Border Name="Edge" BorderThickness="0" CornerRadius="3"  Background="{StaticResource ButtonBackgroundColor}" BorderBrush="White" >
                        <ContentPresenter HorizontalAlignment="Center" VerticalAlignment="Center" Content="{TemplateBinding Content}" />
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter TargetName="Edge"  Property="Background" Value="{StaticResource ButtonMouseOverColor}" />
                            <Setter TargetName="Edge"  Property="BorderThickness" Value="1" />
                        </Trigger>
                        <Trigger Property="IsPressed" Value="True">
                            <Setter TargetName="Edge"  Property="Background" Value="{StaticResource ButtonPressedColor}" />
                        </Trigger>
                        <Trigger Property="IsSelected" Value="True">
                            <Setter TargetName="Edge"  Property="Background" Value="{StaticResource ButtonSelectedColor}" />
                            <Setter TargetName="Edge"  Property="BorderThickness" Value="0" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <local:BorderClipConverter x:Key="BorderClipConverter" />
    <Style x:Key="RoundedClipBorder" TargetType="Border">
        <Setter Property="Clip">
            <Setter.Value>
                <MultiBinding Converter="{StaticResource BorderClipConverter}">
                    <Binding Path="ActualWidth" RelativeSource="{RelativeSource Self}"/>
                    <Binding Path="ActualHeight" RelativeSource="{RelativeSource Self}"/>
                    <Binding Path="CornerRadius" RelativeSource="{RelativeSource Self}"/>
                </MultiBinding>
            </Setter.Value>
        </Setter>
    </Style>

    <ControlTemplate x:Key="RoundedObject" TargetType="ContentControl">
        <Border Style="{StaticResource RoundedClipBorder}" CornerRadius="3" BorderThickness="0" Background="{Binding Path=Background, RelativeSource={RelativeSource AncestorType=ContentControl}}">
            <ContentPresenter/>
        </Border>
    </ControlTemplate>


    <Style x:Key="PopupWindowTriButtonStyle" TargetType="Button">
        <Setter Property="OverridesDefaultStyle" Value="True"/>
        <Setter Property="Foreground" Value="White"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="Button">
                    <Border Name="Edge" BorderThickness="0" CornerRadius="3"  Background="#CC652D90" BorderBrush="White" OverridesDefaultStyle="False" SnapsToDevicePixels="True">
                        <ContentPresenter HorizontalAlignment="Center" VerticalAlignment="Center" Content="{TemplateBinding Content}" />
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter TargetName="Edge"  Property="Background" Value="#FF333333" />
                        </Trigger>
                        <Trigger Property="IsPressed" Value="True">
                            <Setter TargetName="Edge"  Property="Background" Value="#FF171717" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
</ResourceDictionary>